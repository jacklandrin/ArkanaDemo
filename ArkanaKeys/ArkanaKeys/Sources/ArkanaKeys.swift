// DO NOT MODIFY
// Automatically generated by Arkana (https://github.com/rogerluan/arkana)

import Foundation
import ArkanaKeysInterfaces

public enum ArkanaKeys {
    @inline(__always)
    fileprivate static let salt: [UInt8] = [
        0xd2, 0x6a, 0xae, 0x4d, 0xb4, 0x62, 0x1a, 0x49, 0xad, 0xb, 0x41, 0x15, 0xf5, 0x35, 0xf9, 0x22, 0x7, 0x12, 0x8d, 0x10, 0x72, 0x24, 0xd1, 0xfa, 0x86, 0xc1, 0xd7, 0x21, 0xc3, 0xf5, 0xc, 0x20, 0x9b, 0xac, 0x7c, 0x6c, 0x6a, 0x83, 0x4, 0x27, 0x8a, 0x5b, 0xe9, 0x7f, 0x3d, 0x62, 0xec, 0x1a, 0xda, 0xf2, 0x7a, 0xb5, 0x1, 0xc0, 0xdd, 0x3c, 0x53, 0x8b, 0x6f, 0x19, 0xf6, 0xe3, 0xbd, 0xd5
    ]

    static func decode(encoded: [UInt8], cipher: [UInt8]) -> String {
        return String(decoding: encoded.enumerated().map { offset, element in
            element ^ cipher[offset % cipher.count]
        }, as: UTF8.self)
    }

    static func decode(encoded: [UInt8], cipher: [UInt8]) -> Bool {
        let stringValue: String = Self.decode(encoded: encoded, cipher: cipher)
        return Bool(stringValue)!
    }

    static func decode(encoded: [UInt8], cipher: [UInt8]) -> Int {
        let stringValue: String = Self.decode(encoded: encoded, cipher: cipher)
        return Int(stringValue)!
    }
}

public extension ArkanaKeys {
    struct Global: ArkanaKeysGlobalProtocol {
        public init() {}

        @inline(__always)
        public let mySecretAPIKey: Int = {
            let encoded: [UInt8] = [
                0xe3, 0x58, 0x9d, 0x79, 0x81, 0x57, 0x2c
            ]
            return ArkanaKeys.decode(encoded: encoded, cipher: ArkanaKeys.salt)
        }()

        @inline(__always)
        public let myPassword: String = {
            let encoded: [UInt8] = [
                0xb8, 0x2, 0xc6, 0x2b, 0xd0, 0x9, 0x69, 0x21, 0xcb, 0x62
            ]
            return ArkanaKeys.decode(encoded: encoded, cipher: ArkanaKeys.salt)
        }()
    }
}

public extension ArkanaKeys {
    struct Debug: ArkanaKeysEnvironmentProtocol {
        public init() {}

        @inline(__always)
        public let seviceAPIKey: Int = {
            let encoded: [UInt8] = [
                0xe3, 0x5b, 0x9f, 0x7c, 0x85, 0x53
            ]
            return ArkanaKeys.decode(encoded: encoded, cipher: ArkanaKeys.salt)
        }()
    }
}
